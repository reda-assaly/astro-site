---
import Markdown from 'astro:components';
interface Props {
  title: string;
  services: string;
  definitions: string;
  body:any
}

const { services, title, definitions } = Astro.props;
const servicesArray = services.split(',');
const definitionsArray = services.split('||');
const collection = await Astro.glob('../content/cases/*.md');
const entry = collection.find((post) => post.frontmatter.title === title);
const { Content } =  entry;


---

<div class="cs-container px-4 pt-[42px] w-full border-none" data-services={services} data-definitions={definitions}>
  <div class="flex flex-wrap gap-x-2 gap-y-3 mb-[21px]">
    {
      servicesArray.map((service, index) => (
        <div class="pill border-[1px] inline-flex items-center gap-[12px] justify-center px-[12px] py-[5px] border-[#171F29] rounded-[7px] font-inter font-[400] text-[12px] uppercase leading-4"
        data-index={index}>
          {service}
        </div>
      ))
    }
  </div>
  <div  class="definitions hidden mb-4 font-inter text-[14px] font-[400] leading-[16px]"></div>
  <div class="flex justify-between items-end mb-[32px]">
    <h2 class="font-gabriela text-[32px] text-[#171F29] font-[600] italic leading-[30px]">{title}</h2>
    <button
      class="toggleButton mb-[21px] justify-self-end bg-[#FEEF50] px-[11px] py-[5px] rounded-tr-[7px] rounded-bl-[7px] font-inter font-[700] uppercase leading-[16px] text-[10px] text-[#171F29]"
      >MORE</button>
  </div>
  <div class="hr h-[1px] bg-[#171F29]/[0.2]"><hr></div>
  <div class="cs-content hidden " >
    <div class="flex flex-col flex-1 font-inter text-[16px] font-[400] leading-[150%] -mt-10" ><Content /></div>
    <div>
      <div class="h-8 flex justify-between items-end mb-8">
        <div class="bg-[#171F29] px-[11px] py-[5px] rounded-tr-[7px] rounded-bl-[7px] font-inter font-[700] uppercase text-white text-[12px]">CASE STUDIES</div>
        <button class="closeButton text-[#171F29] underline uppercase font-inter font-[700] text-[12px] leading-[160%]">CLOSE</button>
      </div>
    </div>
  </div>
</div>



<style>
  .cs-container.open .pill {
      background-color: #171F29;
      color: #fff;
  }

  /* .cs-container{
    transition: all 0.7s ease;
  } */

  .pill.active{
    background-color: #FEEF50;
    font-weight: 700;
  }
  .open .pill.active{
    border: 1px solid #171F29;
    background-color: #fff;
    color: #171F29;
    font-weight: 700;
    
  }
</style>

<script>
  
  
  document.querySelectorAll(".toggleButton").forEach((button) => {
    button.addEventListener("click", function () {
      var content = this.parentNode.nextElementSibling;
      var container = this.closest(".cs-container");

      container.classList.add("min-h-[100svh]", "bg-[#FEEF50]","flex","flex-col","flex-1","h-full","fixed","top-0","left-0","z-50","open");
      container.querySelector(".cs-content").classList.add("flex", "flex-col", "flex-1");
      container.querySelector(".cs-content").classList.remove("hidden");
      container.querySelector(".hr").classList.add("hidden");
      this.classList.add("hidden");
      document.querySelector(".pill").classList.remove("active");
      // remove the class 'active' from all elements with the class 'pill'
      document.querySelectorAll(".pill").forEach((pill) => {
        pill.classList.remove("active");
      })
      document.querySelector("body").classList.add("overflow-hidden");
      container.querySelector(".definitions").classList.add("hidden");
      container.querySelector(".definitions").classList.remove("block");
      container.querySelector(".definitions").innerHTML = ''
    });
  });

  document.querySelectorAll(".closeButton").forEach((button) => {
    button.addEventListener("click", function () {
      var content = this.parentNode.nextElementSibling;
      var container = this.closest(".cs-container");
      

      container.classList.remove("min-h-[100svh]", "bg-[#FEEF50]","flex","flex-col","flex-1","h-full","fixed","top-0","left-0","z-50","open");
      container.querySelector(".cs-content").classList.remove("flex", "flex-col", "flex-1");
      container.querySelector(".cs-content").classList.add("hidden");
      container.querySelector(".toggleButton").classList.remove("hidden");
      container.querySelector(".hr").classList.remove("hidden");
      // remove the class 'active' from all elements with the class 'pill'
      document.querySelectorAll(".pill").forEach((pill) => {
        pill.classList.remove("active");
      })
      document.querySelector("body").classList.remove("overflow-hidden");
      container.querySelector(".definitions").classList.add("hidden");
      container.querySelector(".definitions").classList.remove("block");
      container.querySelector(".definitions").innerHTML = ''
    });
  });

  document.querySelectorAll(".pill").forEach((item) => {
  item.addEventListener("click", function () {
    var container = this.closest(".cs-container")
    let jsServices = container.getAttribute("data-services").split(',');
    let jsDefinitions = container.getAttribute("data-definitions").split('||');
    if(item.classList.contains("active")){
      item.classList.remove("active");
      container.querySelector(".definitions").classList.add("hidden");
      container.querySelector(".definitions").classList.remove("block");
      container.querySelector(".definitions").innerHTML = "";
    }else{
      document.querySelectorAll(".pill").forEach((pill) => {
        pill.classList.remove("active");
      })
      document.querySelectorAll(".definitions").forEach((definition) => {
        definition.classList.add("hidden");
        definition.classList.remove("block");
        definition.innerHTML = "";
      });
      item.classList.add("active");
      const itemText = item.innerHTML;
    let index = parseInt(item.getAttribute('data-index'));
    let definition = jsDefinitions[index];
    if (index > -1) { 
      container.querySelector(".definitions").classList.remove("hidden");
      container.querySelector(".definitions").classList.add("block");
      container.querySelector(".definitions").innerHTML = definition
    }
    }
    
    
  });
});
</script>
